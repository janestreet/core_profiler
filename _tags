# OASIS_START
# DO NOT EDIT (digest: ad32adeaabc5707905ab376f8c60404e)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core_profiler_disabled
"disabled_lib/core_profiler_disabled.cmxs": use_core_profiler_disabled
"disabled_lib/disabled.cmx": for-pack(Core_profiler_disabled)
"disabled_lib/intf.cmx": for-pack(Core_profiler_disabled)
"disabled_lib/profiler_units.cmx": for-pack(Core_profiler_disabled)
"disabled_lib/std.cmx": for-pack(Core_profiler_disabled)
<disabled_lib/*.ml{,i,y}>: package(core)
<disabled_lib/*.ml{,i,y}>: package(core.syntax)
<disabled_lib/*.ml{,i,y}>: package(pa_bench)
<disabled_lib/*.ml{,i,y}>: package(pa_bench.syntax)
<disabled_lib/*.ml{,i,y}>: package(pa_test)
<disabled_lib/*.ml{,i,y}>: package(pa_test.syntax)
<disabled_lib/*.ml{,i,y}>: package(textutils)
<disabled_lib/*.ml{,i,y}>: package(threads)
# Library core_profiler
"lib/core_profiler.cmxs": use_core_profiler
"lib/check_environment.cmx": for-pack(Core_profiler)
"lib/common.cmx": for-pack(Core_profiler)
"lib/fstats.cmx": for-pack(Core_profiler)
"lib/header_protocol.cmx": for-pack(Core_profiler)
"lib/offline.cmx": for-pack(Core_profiler)
"lib/online.cmx": for-pack(Core_profiler)
"lib/probe_id.cmx": for-pack(Core_profiler)
"lib/probe_type.cmx": for-pack(Core_profiler)
"lib/profiler_epoch.cmx": for-pack(Core_profiler)
"lib/protocol.cmx": for-pack(Core_profiler)
"lib/std_offline.cmx": for-pack(Core_profiler)
"lib/std_online.cmx": for-pack(Core_profiler)
<lib/*.ml{,i,y}>: package(core)
<lib/*.ml{,i,y}>: package(core.syntax)
<lib/*.ml{,i,y}>: package(pa_bench)
<lib/*.ml{,i,y}>: package(pa_bench.syntax)
<lib/*.ml{,i,y}>: package(pa_test)
<lib/*.ml{,i,y}>: package(pa_test.syntax)
<lib/*.ml{,i,y}>: package(textutils)
<lib/*.ml{,i,y}>: package(threads)
<lib/*.ml{,i,y}>: use_core_profiler_disabled
# Library core_profiler_offline_tool
"offline_tool/lib/core_profiler_offline_tool.cmxs": use_core_profiler_offline_tool
"offline_tool/lib/event_generator.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/filter.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/id_table.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/interest.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/path.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/reader.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/reservoir_sampling.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/std.cmx": for-pack(Core_profiler_offline_tool)
"offline_tool/lib/util.cmx": for-pack(Core_profiler_offline_tool)
<offline_tool/lib/*.ml{,i,y}>: package(core)
<offline_tool/lib/*.ml{,i,y}>: package(core.syntax)
<offline_tool/lib/*.ml{,i,y}>: package(pa_bench)
<offline_tool/lib/*.ml{,i,y}>: package(pa_bench.syntax)
<offline_tool/lib/*.ml{,i,y}>: package(pa_ounit)
<offline_tool/lib/*.ml{,i,y}>: package(pa_ounit.syntax)
<offline_tool/lib/*.ml{,i,y}>: package(pa_test)
<offline_tool/lib/*.ml{,i,y}>: package(pa_test.syntax)
<offline_tool/lib/*.ml{,i,y}>: package(re2)
<offline_tool/lib/*.ml{,i,y}>: package(textutils)
<offline_tool/lib/*.ml{,i,y}>: package(threads)
<offline_tool/lib/*.ml{,i,y}>: use_core_profiler
<offline_tool/lib/*.ml{,i,y}>: use_core_profiler_disabled
# Executable core-profiler-tool
<offline_tool/bin/profiler_tool.{native,byte}>: package(core)
<offline_tool/bin/profiler_tool.{native,byte}>: package(core.syntax)
<offline_tool/bin/profiler_tool.{native,byte}>: package(core_extended)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_bench)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_bench.syntax)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_ounit)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_ounit.syntax)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_test)
<offline_tool/bin/profiler_tool.{native,byte}>: package(pa_test.syntax)
<offline_tool/bin/profiler_tool.{native,byte}>: package(re2)
<offline_tool/bin/profiler_tool.{native,byte}>: package(textutils)
<offline_tool/bin/profiler_tool.{native,byte}>: package(threads)
<offline_tool/bin/profiler_tool.{native,byte}>: use_core_profiler
<offline_tool/bin/profiler_tool.{native,byte}>: use_core_profiler_disabled
<offline_tool/bin/profiler_tool.{native,byte}>: use_core_profiler_offline_tool
<offline_tool/bin/*.ml{,i,y}>: package(core_extended)
# Executable core-profiler-dump-metrics
<offline_tool/bin/dump_metrics.{native,byte}>: package(core)
<offline_tool/bin/dump_metrics.{native,byte}>: package(core.syntax)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_bench)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_bench.syntax)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_ounit)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_ounit.syntax)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_test)
<offline_tool/bin/dump_metrics.{native,byte}>: package(pa_test.syntax)
<offline_tool/bin/dump_metrics.{native,byte}>: package(re2)
<offline_tool/bin/dump_metrics.{native,byte}>: package(textutils)
<offline_tool/bin/dump_metrics.{native,byte}>: package(threads)
<offline_tool/bin/dump_metrics.{native,byte}>: use_core_profiler
<offline_tool/bin/dump_metrics.{native,byte}>: use_core_profiler_disabled
<offline_tool/bin/dump_metrics.{native,byte}>: use_core_profiler_offline_tool
<offline_tool/bin/*.ml{,i,y}>: package(core)
<offline_tool/bin/*.ml{,i,y}>: package(core.syntax)
<offline_tool/bin/*.ml{,i,y}>: package(pa_bench)
<offline_tool/bin/*.ml{,i,y}>: package(pa_bench.syntax)
<offline_tool/bin/*.ml{,i,y}>: package(pa_ounit)
<offline_tool/bin/*.ml{,i,y}>: package(pa_ounit.syntax)
<offline_tool/bin/*.ml{,i,y}>: package(pa_test)
<offline_tool/bin/*.ml{,i,y}>: package(pa_test.syntax)
<offline_tool/bin/*.ml{,i,y}>: package(re2)
<offline_tool/bin/*.ml{,i,y}>: package(textutils)
<offline_tool/bin/*.ml{,i,y}>: package(threads)
<offline_tool/bin/*.ml{,i,y}>: use_core_profiler
<offline_tool/bin/*.ml{,i,y}>: use_core_profiler_disabled
<offline_tool/bin/*.ml{,i,y}>: use_core_profiler_offline_tool
# Executable ex-minor-gcs
<examples/minor_gcs.{native,byte}>: package(core)
<examples/minor_gcs.{native,byte}>: package(core.syntax)
<examples/minor_gcs.{native,byte}>: package(pa_bench)
<examples/minor_gcs.{native,byte}>: package(pa_bench.syntax)
<examples/minor_gcs.{native,byte}>: package(pa_test)
<examples/minor_gcs.{native,byte}>: package(pa_test.syntax)
<examples/minor_gcs.{native,byte}>: package(textutils)
<examples/minor_gcs.{native,byte}>: package(threads)
<examples/minor_gcs.{native,byte}>: use_core_profiler
<examples/minor_gcs.{native,byte}>: use_core_profiler_disabled
# Executable ex-prog1
<examples/prog1.{native,byte}>: package(core)
<examples/prog1.{native,byte}>: package(core.syntax)
<examples/prog1.{native,byte}>: package(pa_bench)
<examples/prog1.{native,byte}>: package(pa_bench.syntax)
<examples/prog1.{native,byte}>: package(pa_test)
<examples/prog1.{native,byte}>: package(pa_test.syntax)
<examples/prog1.{native,byte}>: package(textutils)
<examples/prog1.{native,byte}>: package(threads)
<examples/prog1.{native,byte}>: use_core_profiler
<examples/prog1.{native,byte}>: use_core_profiler_disabled
# Executable ex-prog2
<examples/prog2.{native,byte}>: package(core)
<examples/prog2.{native,byte}>: package(core.syntax)
<examples/prog2.{native,byte}>: package(pa_bench)
<examples/prog2.{native,byte}>: package(pa_bench.syntax)
<examples/prog2.{native,byte}>: package(pa_test)
<examples/prog2.{native,byte}>: package(pa_test.syntax)
<examples/prog2.{native,byte}>: package(textutils)
<examples/prog2.{native,byte}>: package(threads)
<examples/prog2.{native,byte}>: use_core_profiler
<examples/prog2.{native,byte}>: use_core_profiler_disabled
# Executable ex-prog3
<examples/prog3.{native,byte}>: package(core)
<examples/prog3.{native,byte}>: package(core.syntax)
<examples/prog3.{native,byte}>: package(pa_bench)
<examples/prog3.{native,byte}>: package(pa_bench.syntax)
<examples/prog3.{native,byte}>: package(pa_test)
<examples/prog3.{native,byte}>: package(pa_test.syntax)
<examples/prog3.{native,byte}>: package(textutils)
<examples/prog3.{native,byte}>: package(threads)
<examples/prog3.{native,byte}>: use_core_profiler
<examples/prog3.{native,byte}>: use_core_profiler_disabled
# Executable ex-prog4
<examples/prog4.{native,byte}>: package(core)
<examples/prog4.{native,byte}>: package(core.syntax)
<examples/prog4.{native,byte}>: package(pa_bench)
<examples/prog4.{native,byte}>: package(pa_bench.syntax)
<examples/prog4.{native,byte}>: package(pa_test)
<examples/prog4.{native,byte}>: package(pa_test.syntax)
<examples/prog4.{native,byte}>: package(textutils)
<examples/prog4.{native,byte}>: package(threads)
<examples/prog4.{native,byte}>: use_core_profiler
<examples/prog4.{native,byte}>: use_core_profiler_disabled
<examples/*.ml{,i,y}>: package(core)
<examples/*.ml{,i,y}>: package(core.syntax)
<examples/*.ml{,i,y}>: package(pa_bench)
<examples/*.ml{,i,y}>: package(pa_bench.syntax)
<examples/*.ml{,i,y}>: package(pa_test)
<examples/*.ml{,i,y}>: package(pa_test.syntax)
<examples/*.ml{,i,y}>: package(textutils)
<examples/*.ml{,i,y}>: package(threads)
<examples/*.ml{,i,y}>: use_core_profiler
<examples/*.ml{,i,y}>: use_core_profiler_disabled
# Executable test_bench
<lib_test/iobuf_bench.{native,byte}>: package(core)
<lib_test/iobuf_bench.{native,byte}>: package(core.syntax)
<lib_test/iobuf_bench.{native,byte}>: package(core_bench)
<lib_test/iobuf_bench.{native,byte}>: package(pa_bench)
<lib_test/iobuf_bench.{native,byte}>: package(pa_bench.syntax)
<lib_test/iobuf_bench.{native,byte}>: package(pa_test)
<lib_test/iobuf_bench.{native,byte}>: package(pa_test.syntax)
<lib_test/iobuf_bench.{native,byte}>: package(textutils)
<lib_test/iobuf_bench.{native,byte}>: package(threads)
<lib_test/iobuf_bench.{native,byte}>: use_core_profiler
<lib_test/iobuf_bench.{native,byte}>: use_core_profiler_disabled
<lib_test/*.ml{,i,y}>: package(core)
<lib_test/*.ml{,i,y}>: package(core.syntax)
<lib_test/*.ml{,i,y}>: package(core_bench)
<lib_test/*.ml{,i,y}>: package(pa_bench)
<lib_test/*.ml{,i,y}>: package(pa_bench.syntax)
<lib_test/*.ml{,i,y}>: package(pa_test)
<lib_test/*.ml{,i,y}>: package(pa_test.syntax)
<lib_test/*.ml{,i,y}>: package(textutils)
<lib_test/*.ml{,i,y}>: package(threads)
<lib_test/*.ml{,i,y}>: use_core_profiler
<lib_test/*.ml{,i,y}>: use_core_profiler_disabled
# OASIS_STOP
<**/*.ml>: warn(-40)
<lib/*.ml{,i}>: syntax_camlp4o, pa_ounit_lib(core_profiler)
<disabled_lib/*.ml{,i}>: syntax_camlp4o, pa_ounit_lib(core_profiler.disabled)
<offline_tool/lib/*.ml{,i}>: syntax_camlp4o, pa_ounit_lib(core_profiler.offline_tool)
